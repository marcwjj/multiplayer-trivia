{"version":3,"sources":["logo.svg","Player.js","Scoreboard.js","View.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","className","onClick","onChange","score","Player","colors","sizes","this","onRemove","name","messages","map","message","index","Chip","icon","Chat","label","size","color","onScoreChange","Component","nextID","Stopwatch","componentDidMount","interval","setInterval","onTick","componentWillUnmount","clearInterval","state","running","elapsedTime","previousTime","onStart","bind","onStop","onReset","now","Date","setState","seconds","Math","floor","startStop","AddPlayerForm","onSubmit","onNameChange","e","preventDefault","onAdd","target","value","type","Stats","totalPlayers","players","length","totalPoints","reduce","total","player","Header","title","Scoreboard","initialPlayers","onPlayerAdd","onRemovePlayer","prevProps","delta","database","ref","uid","update","console","log","push","id","splice","View","firebase","prevMessages","users","playerMessages","sendMessage","onMessageChange","Button","variant","quickAnswer","placeholder","user","updateUserName","deleteOldMessages","setupPlayerListeners","displayName","retrieveMessagesRef","cutoff","orderByChild","endAt","limitToLast","on","snapshot","remove","text","set","timestamp","key","username","val","sortedUsers","Object","keys","sort","i","setupChatHistoryListeners","history","lastTimestamp","unshift","pop","App","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","signed","authProvider","auth","GoogleAuthProvider","src","photoURL","hidden","logo","alt","disabled","signIn","signInWithPopup","then","result","credential","accessToken","catch","error","code","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aa7eee8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\nimport './Player.css';\nimport Chip from '@material-ui/core/Chip';\nimport {Chat} from '@material-ui/icons';\n\n// Stateless Functional Components\nfunction Counter(props) {\n    return (\n      <div className=\"counter\">\n        <button className=\"counter-action decrement\" onClick={function () { props.onChange(-1); }}> - </button>\n        <div className=\"counter-score\"> {props.score} </div>\n        <button className=\"counter-action increment\" onClick={function () { props.onChange(+1); }}> + </button>\n      </div>\n    );\n  }\n  \n  // Counter.propTypes = {\n  //   score: PropTypes.number.isRequired,\n  //   onChange: PropTypes.func.isRequired\n  //   //  initialScore: PropTypes.number.isRequired    // setting the initial player score stated in the PLAYERS array\n  \n  // };\n\nclass Player extends Component {\n    render() {\n        let colors = ['primary', '', ''];\n        let sizes = ['medium', 'small', 'small'];\n        return (\n        <div className=\"player\">\n            <div className=\"player-container\">\n                <div className=\"player-name\">\n                <a className=\"remove-player\" onClick={this.props.onRemove}> X </a>\n                {this.props.name}\n                </div>\n                <div className=\"message-chips\">\n                    {this.props.messages ?  \n                        this.props.messages.messages.map((message, index) => {\n                            return (<Chip icon={<Chat />} label={message} size={sizes[index]} \n                                color={colors[index]} className={\"chip-\" + index}></Chip> )\n                        }) : ''\n                    }\n                </div>\n                {/* {this.props.messages && this.props.messages.lastTimestamp} */}\n            </div>\n            <div className=\"player-score\">\n            <Counter score={this.props.score} onChange={this.props.onScoreChange} />\n            </div>\n        </div>\n    \n        );\n    }\n  \n  // Player.propTypes = {\n  //   name: PropTypes.string.isRequired,\n  //   score: PropTypes.number.isRequired,\n  //   onScoreChange: PropTypes.func.isRequired,\n  //   onRemove: PropTypes.func.isRequired\n  // };\n}\n\nexport default Player;","import { Component, PropTypes } from 'react';\nimport './Scoreboard.css';\nimport Player from './Player.js';\n\n\nlet nextID = 4;\n\n// Components\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      running: false,\n      elapsedTime: 0,\n      previousTime: 0\n       };\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onTick = this.onTick.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.interval = setInterval(this.onTick,100);\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval);\n  }\n\n  onTick() {\n    if(this.state.running) {\n      let now = Date.now();  \n      this.setState({\n        previousTime: now,\n        elapsedTime: this.state.elapsedTime + (now - this.state.previousTime)\n      });\n    }\n    // console.log('onTick');\n  }\n\n  onStart() {\n    this.state = {\n      running: true, \n      previousTime: Date.now()\n      };\n    this.setState(this.state);\n  };\n\n  onStop() {\n    this.state = {running: false};\n    this.setState(this.state);\n  };\n\n  onReset() {\n    this.state = ({\n      elapsedTime: 0,\n      previousTime: Date.now()\n    });\n    this.setState(this.state);\n  };\n\n  render() {\n    let seconds = Math.floor(this.state.elapsedTime / 1000);\n    // ternary conditional operator can also be used inside a JSX expression (if statements cannot)\n   let startStop = this.state.running ? <button onClick={this.onStop}>Stop</button> : \n                    <button onClick={this.onStart}>Start</button>;\n \n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <div className=\"stopwatch-time\"> {seconds} </div>\n        { startStop }\n        <button onClick={this.onReset}>Reset</button>\n      </div>\n    );\n  };\n}\n\nclass AddPlayerForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      name: \"\"\n    };\n    this.onNameChange = this.onNameChange.bind(this);\n\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.onAdd(this.state.name);\n    this.setState({ name: \"\" });\n  }\n\n  onNameChange(e) {\n    this.setState({ name: e.target.value });\n  }\n\n\n  render() {\n    return (\n      <div className=\"add-player-form\">\n        <form onSubmit={this.onSubmit}>\n          <input type=\"text\" value={this.state.name} onChange={this.onNameChange} />\n          <input type=\"submit\" value=\"Add Player\" />\n        </form>\n      </div>\n    );\n  }\n};\n\n// AddPlayerForm.propTypes = {\n//   onAdd: PropTypes.func.isRequired\n// }\n\nfunction Stats(props) {\n  let totalPlayers = props.players.length;\n  let totalPoints = props.players.reduce(function (total, player) {\n    return total + player.score;\n  }, 0);\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <td>Players:</td>\n          <td>{totalPlayers}</td>\n        </tr>\n        <tr>\n          <td>Total Points:</td>\n          <td>{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\n// Stats.propTypes = {\n//   players: PropTypes.array.isRequired\n//};\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <Stats players={props.players} />\n      <h1>{props.title}</h1>\n      <Stopwatch />\n    </div>\n  );\n}\n\n// Header.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   players: PropTypes.array.isRequired\n// };\n\n// ES6 Classes\n// class Counter extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {score: this.props.initialScore};  // Move the score from props to the state proprty\n//     this.incrementScore = this.incrementScore.bind(this);\n//     this.decrementScore = this.decrementScore.bind(this);\n//   }\n//   incrementScore() {\n//     this.setState({\n//       score: (this.state.score + 1)\n//     });\n//   }\n\n//   decrementScore() {\n//     if (this.state.score !== 0) {   // if statement so the score does not go below 0\n//     this.setState({\n//       score: (this.state.score - 1)\n//     });\n//     }\n//   }\n\n\n//   render() {\n//     return (\n//       <div className=\"counter\">\n//         <button className=\"counter-action decrement\" onClick={this.decrementScore}> - </button>\n//         <div className=\"counter-score\"> {this.state.score} </div>\n//         <button className=\"counter-action increment\" onClick={this.incrementScore}> + </button>\n//       </div>\n//     );\n//   }\n// };\n\n\n\n// end of components\n\n// Main Application Component\n// ES6 Classes\nclass Scoreboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { players: this.props.initialPlayers , messages: {}};\n    this.onPlayerAdd = this.onPlayerAdd.bind(this);\n    this.onRemovePlayer = this.onRemovePlayer.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n     if (!prevProps || this.props.initialPlayers.length != prevProps.initialPlayers.length) {\n        this.setState({ players: this.props.initialPlayers });\n     }\n\n    //  if (!prevProps || this.props.messages !== prevProps.messages) {\n    //     this.setState({messages: this.props.messages});\n    //     console.log('update messages');\n    // }\n  }\n\n  onScoreChange(index, delta) {\n    this.state.players[index].score += delta;\n    this.setState(this.state);\n    // Update firebase db.\n    this.props.database.ref('username/' + this.state.players[index].uid).update({'score': this.state.players[index].score});\n  }\n\n  onPlayerAdd(name) {\n    console.log('Player added', name);\n    this.state.players.push({\n      name: name,\n      score: 0,\n      id: nextID\n    });\n    this.setState(this.state);  // updating the state\n    nextID = nextID + 1;\n  }\n\n  onRemovePlayer(index) {\n    this.state.players.splice(index, 1);\n    this.setState(this.state);  // update the state\n  }\n\n  render() {\n    return (\n      <div className=\"scoreboard\">\n        <Header title={this.props.title} players={this.state.players} />\n\n        <div className=\"players\">\n          {this.state.players.map(function (player, index) {\n            return (\n              <Player\n                onScoreChange={function (delta) { this.onScoreChange(index, delta) }.bind(this)}\n                onRemove={function () { this.onRemovePlayer(index) }.bind(this)}\n                name={player.name}\n                score={player.score}\n                messages={this.props.messages[player.uid]}\n                key={player.id} />\n            );\n          }.bind(this))}\n        </div>\n\n        <AddPlayerForm onAdd={this.onPlayerAdd} />\n\n      </div>\n\n    );\n  }\n}\n\n// function Application(props) {\n//   return (\n//     <div className=\"scoreboard\">\n//       <Header title={props.title} />\n\n//       <div className=\"players\">\n//         {props.players.map(function (player) {\n//           return <Player name={player.name} score={player.score} key={player.id} />\n//         })}\n//       </div>\n//     </div>\n\n//   );\n// }\n\n// Application.propTypes = {\n//   title: React.PropTypes.string,\n//   initialPlayers: React.PropTypes.arrayOf(React.PropTypes.shape({\n//     name: React.PropTypes.string.isRequired,\n//     score: React.PropTypes.number.isRequired,\n//     id: React.PropTypes.number.isRequired\n//   })).isRequired  // accepts only an array of objects which hasd the specifc valuies listed in the shape()\n// };\n\n// Application.defaultProps = {  // This is the defualt value you can set if there is no specifc title value\n//   title: \"Scoreboard\"\n// };\n\n// ReactDOM.render(<Application initialPlayers={PLAYERS} />, document.getElementById('container'));\n\nexport default Scoreboard;","import { Component } from 'react';\nimport './View.css';\nimport Button from '@material-ui/core/Button';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport Scoreboard from './Scoreboard.js';\n\nexport let NUM_MESSAGES_HISTORY = 10;\n\nclass View extends Component {   \n    constructor(props) {\n        super(props);\n        this.database = firebase.database();\n        this.state = {prevMessages : [], users: {}, players: [], message : '', playerMessages: {}, database: this.database};\n        this.sendMessage = this.sendMessage.bind(this);\n        this.onMessageChange = this.onMessageChange.bind(this);\n      }\n\n    render() {\n        return (\n              <div className=\"View\">\n                <div className=\"Messaging\">\n                  <div className=\"first-row\">\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"A\")}> \n                      A\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"B\")}> \n                      B\n                    </Button>\n                  </div>\n                  <div className=\"second-row\">\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"C\")}> \n                      C\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"D\")}> \n                      D\n                    </Button>\n                  </div>\n                  <div className=\"custom-text-form\">\n                  <form onSubmit={this.sendMessage}>\n                    <input placeholder=\"Type your answer\" type=\"text\" value={this.state.message} onChange={this.onMessageChange} />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" >\n                      Enter\n                    </Button>\n                  </form>\n                </div>\n                </div>\n                <div className=\"History\">\n                  <Scoreboard initialPlayers={this.state.players} messages={this.state.playerMessages} database={this.state.database}/>\n                </div>\n              </div>\n\n        );\n      }\n    \n    componentDidUpdate(prevProps) {\n      if (!prevProps || this.props.user.uid != prevProps.user.uid) {\n        console.log('props.user update');\n        this.updateUserName();\n        this.deleteOldMessages();\n        this.setupPlayerListeners();\n      }\n    }\n\n    updateUserName() {\n      this.database.ref('username/' + this.props.user.uid).update({'username': this.props.user.displayName});\n    }\n\n    // Remove posts that's older than 2 hours.\n    deleteOldMessages() {\n      let retrieveMessagesRef = this.database.ref('users/'+this.props.user.uid);\n      let oldestKey = \"\";\n      let now = Date.now();\n      let cutoff = now - 2*60*60*1000;\n      retrieveMessagesRef.orderByChild('timestamp').endAt(cutoff).limitToLast(1).on(\"child_added\", (snapshot) => {\n        snapshot.ref.remove();\n      })\n    }\n\n    quickAnswer(text) {\n      this.state.message = text;\n      this.sendMessage();\n    }\n\n    sendMessage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n      // this.deleteOldMessages();\n      if (!this.state.message) {return;}\n      const message = this.state.message;\n      this.setState({ message: '' });\n        let postMessagesRef = this.database.ref('users/'+this.props.user.uid);\n       let newMessage = postMessagesRef.push();\n       newMessage.set({message, timestamp: Date.now()});\n    }\n\n    setupPlayerListeners() {\n      let usernameRef = this.database.ref('username');\n      usernameRef.on('child_added', (snapshot) => {\n        this.state.users[snapshot.key] = {username: snapshot.val().username, score: snapshot.val().score || 0};\n        const sortedUsers = Object.keys(this.state.users).sort().map((key, i) => {\n            return {name:this.state.users[key].username, id: i, score: this.state.users[key].score, uid: key};\n          });\n        this.setState({players: sortedUsers});\n        //console.log(sortedUsers);\n        this.setupChatHistoryListeners(sortedUsers);\n      })\n    }\n\n    setupChatHistoryListeners(sortedUsers) {\n      for (let player of sortedUsers) {\n        // console.log(player);\n        let retrieveMessagesRef = this.database.ref('users/'+player.uid);\n        retrieveMessagesRef.orderByChild('timestamp').limitToLast(3).on(\"child_added\", (snapshot) => {\n          console.log(snapshot.val().message);\n          let history = this.state.playerMessages[player.uid];\n          if (!history) {\n            history = this.state.playerMessages[player.uid] = {};\n          }\n          if (!history.lastTimestamp || history.lastTimestamp !== snapshot.val().timestamp) {\n            history.lastTimestamp = snapshot.val().timestamp;\n            if (!history.messages) {\n              history.messages = [];\n            }\n            history.messages.unshift(snapshot.val().message);\n            if (history.messages.length > 3) {history.messages.pop();}\n            // console.log(this.state.playerMessages);\n            this.setState({playerMessages: this.state.playerMessages});\n          }\n          \n        })\n      }\n    }\n  \n    onMessageChange(e) {\n      this.setState({ message: e.target.value });      \n    }\n}\n\nexport default View;","import logo from './logo.svg';\nimport './App.css';\nimport View from './View.js';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Button from '@material-ui/core/Button';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('foo');\n              // Your web app's Firebase configuration\n              var firebaseConfig = {\n                apiKey: \"AIzaSyB4X2zC7tYE6T5e0rIBlZ8RzbNhnAQ58Ws\",\n                authDomain: \"multiplayer-trivia-68951.firebaseapp.com\",\n                projectId: \"multiplayer-trivia-68951\",\n                storageBucket: \"multiplayer-trivia-68951.appspot.com\",\n                messagingSenderId: \"1016103210575\",\n                appId: \"1:1016103210575:web:c997edfe327ca68893e43a\",\n                measurementId: \"G-7JBQP4CF0Y\"\n              };\n              if (!firebase.apps.length){\n              // Initialize Firebase\n              firebase.initializeApp(firebaseConfig);\n              }\n              \n      \n      \n    this.state = {signed : false, user: {}};\n    this.authProvider = new firebase.auth.GoogleAuthProvider();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> ML Insights Trivia </h1>\n          <img src={this.state.user.photoURL} className=\"Google-photo\" hidden={!this.state.signed}></img>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div hidden={!this.state.signed}>\n          <View hidden={!this.state.signed} user={this.state.user}></View>\n        </div>\n        <div className=\"Sign-in-button-div\">\n          <Button variant=\"contained\" color=\"primary\" disabled={this.state.signed} onClick={()=>this.signIn()}> \n            Sign in to Google \n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  signIn() {\n    firebase.auth()\n      .signInWithPopup(this.authProvider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        // ...\n        this.setState({signed:true, user: result.user});\n        console.log(user.displayName);\n      }).catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}