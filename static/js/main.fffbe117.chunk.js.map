{"version":3,"sources":["logo.svg","Player.js","Scoreboard.js","View.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","className","onClick","onChange","score","Player","this","onRemove","name","messages","lastTimestamp","onScoreChange","Component","nextID","Stopwatch","componentDidMount","interval","setInterval","onTick","componentWillUnmount","clearInterval","state","running","elapsedTime","previousTime","onStart","bind","onStop","onReset","now","Date","setState","seconds","Math","floor","startStop","AddPlayerForm","onSubmit","onNameChange","e","preventDefault","onAdd","target","value","type","Stats","totalPlayers","players","length","totalPoints","reduce","total","player","Header","title","Scoreboard","initialPlayers","onPlayerAdd","onRemovePlayer","prevProps","index","delta","console","log","push","id","splice","map","uid","View","prevMessages","users","message","playerMessages","database","firebase","sendMessage","onMessageChange","Button","variant","color","user","updateUserName","deleteOldMessages","setupPlayerListeners","ref","set","displayName","retrieveMessagesRef","cutoff","orderByChild","endAt","limitToLast","on","snapshot","remove","timestamp","key","val","username","sortedUsers","Object","keys","sort","i","setupChatHistoryListeners","history","unshift","pop","App","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","signed","authProvider","auth","GoogleAuthProvider","disabled","signIn","src","photoURL","hidden","logo","alt","signInWithPopup","then","result","credential","accessToken","catch","error","code","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fffbe117.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\nimport './Player.css';\n\n// Stateless Functional Components\nfunction Counter(props) {\n    return (\n      <div className=\"counter\">\n        <button className=\"counter-action decrement\" onClick={function () { props.onChange(-1); }}> - </button>\n        <div className=\"counter-score\"> {props.score} </div>\n        <button className=\"counter-action increment\" onClick={function () { props.onChange(+1); }}> + </button>\n      </div>\n    );\n  }\n  \n  // Counter.propTypes = {\n  //   score: PropTypes.number.isRequired,\n  //   onChange: PropTypes.func.isRequired\n  //   //  initialScore: PropTypes.number.isRequired    // setting the initial player score stated in the PLAYERS array\n  \n  // };\n\nclass Player extends Component {\n    render() {\n        return (\n        <div className=\"player\">\n            <div className=\"player-container\">\n                <div className=\"player-name\">\n                <a className=\"remove-player\" onClick={this.props.onRemove}> X </a>\n                {this.props.name}\n                </div>\n                {this.props.messages && this.props.messages.lastTimestamp}\n            </div>\n            <div className=\"player-score\">\n            <Counter score={this.props.score} onChange={this.props.onScoreChange} />\n            </div>\n        </div>\n    \n        );\n    }\n  \n  // Player.propTypes = {\n  //   name: PropTypes.string.isRequired,\n  //   score: PropTypes.number.isRequired,\n  //   onScoreChange: PropTypes.func.isRequired,\n  //   onRemove: PropTypes.func.isRequired\n  // };\n}\n\nexport default Player;","import { Component, PropTypes } from 'react';\nimport './Scoreboard.css';\nimport Player from './Player.js';\n\n\nlet nextID = 4;\n\n// Components\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      running: false,\n      elapsedTime: 0,\n      previousTime: 0\n       };\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onTick = this.onTick.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.interval = setInterval(this.onTick,100);\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval);\n  }\n\n  onTick() {\n    if(this.state.running) {\n      let now = Date.now();  \n      this.setState({\n        previousTime: now,\n        elapsedTime: this.state.elapsedTime + (now - this.state.previousTime)\n      });\n    }\n    // console.log('onTick');\n  }\n\n  onStart() {\n    this.state = {\n      running: true, \n      previousTime: Date.now()\n      };\n    this.setState(this.state);\n  };\n\n  onStop() {\n    this.state = {running: false};\n    this.setState(this.state);\n  };\n\n  onReset() {\n    this.state = ({\n      elapsedTime: 0,\n      previousTime: Date.now()\n    });\n    this.setState(this.state);\n  };\n\n  render() {\n    let seconds = Math.floor(this.state.elapsedTime / 1000);\n    // ternary conditional operator can also be used inside a JSX expression (if statements cannot)\n   let startStop = this.state.running ? <button onClick={this.onStop}>Stop</button> : \n                    <button onClick={this.onStart}>Start</button>;\n \n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <div className=\"stopwatch-time\"> {seconds} </div>\n        { startStop }\n        <button onClick={this.onReset}>Reset</button>\n      </div>\n    );\n  };\n}\n\nclass AddPlayerForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      name: \"\"\n    };\n    this.onNameChange = this.onNameChange.bind(this);\n\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.onAdd(this.state.name);\n    this.setState({ name: \"\" });\n  }\n\n  onNameChange(e) {\n    this.setState({ name: e.target.value });\n  }\n\n\n  render() {\n    return (\n      <div className=\"add-player-form\">\n        <form onSubmit={this.onSubmit}>\n          <input type=\"text\" value={this.state.name} onChange={this.onNameChange} />\n          <input type=\"submit\" value=\"Add Player\" />\n        </form>\n      </div>\n    );\n  }\n};\n\n// AddPlayerForm.propTypes = {\n//   onAdd: PropTypes.func.isRequired\n// }\n\nfunction Stats(props) {\n  let totalPlayers = props.players.length;\n  let totalPoints = props.players.reduce(function (total, player) {\n    return total + player.score;\n  }, 0);\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <td>Players:</td>\n          <td>{totalPlayers}</td>\n        </tr>\n        <tr>\n          <td>Total Points:</td>\n          <td>{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\n// Stats.propTypes = {\n//   players: PropTypes.array.isRequired\n//};\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <Stats players={props.players} />\n      <h1>{props.title}</h1>\n      <Stopwatch />\n    </div>\n  );\n}\n\n// Header.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   players: PropTypes.array.isRequired\n// };\n\n// ES6 Classes\n// class Counter extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {score: this.props.initialScore};  // Move the score from props to the state proprty\n//     this.incrementScore = this.incrementScore.bind(this);\n//     this.decrementScore = this.decrementScore.bind(this);\n//   }\n//   incrementScore() {\n//     this.setState({\n//       score: (this.state.score + 1)\n//     });\n//   }\n\n//   decrementScore() {\n//     if (this.state.score !== 0) {   // if statement so the score does not go below 0\n//     this.setState({\n//       score: (this.state.score - 1)\n//     });\n//     }\n//   }\n\n\n//   render() {\n//     return (\n//       <div className=\"counter\">\n//         <button className=\"counter-action decrement\" onClick={this.decrementScore}> - </button>\n//         <div className=\"counter-score\"> {this.state.score} </div>\n//         <button className=\"counter-action increment\" onClick={this.incrementScore}> + </button>\n//       </div>\n//     );\n//   }\n// };\n\n\n\n// end of components\n\n// Main Application Component\n// ES6 Classes\nclass Scoreboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { players: this.props.initialPlayers };\n    this.onPlayerAdd = this.onPlayerAdd.bind(this);\n    this.onRemovePlayer = this.onRemovePlayer.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n     if (!prevProps || this.props.initialPlayers.length != prevProps.initialPlayers.length) {\n        this.setState({ players: this.props.initialPlayers });\n     }\n  }\n\n  onScoreChange(index, delta) {\n    this.state.players[index].score += delta;\n    this.setState(this.state);\n\n  }\n\n  onPlayerAdd(name) {\n    console.log('Player added', name);\n    this.state.players.push({\n      name: name,\n      score: 0,\n      id: nextID\n    });\n    this.setState(this.state);  // updating the state\n    nextID = nextID + 1;\n  }\n\n  onRemovePlayer(index) {\n    this.state.players.splice(index, 1);\n    this.setState(this.state);  // update the state\n  }\n\n  render() {\n    return (\n      <div className=\"scoreboard\">\n        <Header title={this.props.title} players={this.state.players} />\n\n        <div className=\"players\">\n          {this.state.players.map(function (player, index) {\n            return (\n              <Player\n                onScoreChange={function (delta) { this.onScoreChange(index, delta) }.bind(this)}\n                onRemove={function () { this.onRemovePlayer(index) }.bind(this)}\n                name={player.name}\n                score={player.score}\n                messages={this.props.messages[player.uid]}\n                key={player.id} />\n            );\n          }.bind(this))}\n        </div>\n\n        <AddPlayerForm onAdd={this.onPlayerAdd} />\n\n      </div>\n\n    );\n  }\n}\n\n// function Application(props) {\n//   return (\n//     <div className=\"scoreboard\">\n//       <Header title={props.title} />\n\n//       <div className=\"players\">\n//         {props.players.map(function (player) {\n//           return <Player name={player.name} score={player.score} key={player.id} />\n//         })}\n//       </div>\n//     </div>\n\n//   );\n// }\n\n// Application.propTypes = {\n//   title: React.PropTypes.string,\n//   initialPlayers: React.PropTypes.arrayOf(React.PropTypes.shape({\n//     name: React.PropTypes.string.isRequired,\n//     score: React.PropTypes.number.isRequired,\n//     id: React.PropTypes.number.isRequired\n//   })).isRequired  // accepts only an array of objects which hasd the specifc valuies listed in the shape()\n// };\n\n// Application.defaultProps = {  // This is the defualt value you can set if there is no specifc title value\n//   title: \"Scoreboard\"\n// };\n\n// ReactDOM.render(<Application initialPlayers={PLAYERS} />, document.getElementById('container'));\n\nexport default Scoreboard;","import { Component } from 'react';\nimport './View.css';\nimport Button from '@material-ui/core/Button';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport Scoreboard from './Scoreboard.js';\n\nexport let NUM_MESSAGES_HISTORY = 10;\n\nclass View extends Component {   \n    constructor(props) {\n        super(props);\n        this.state = {prevMessages : [], users: {}, players: [], message : '', playerMessages: {}};\n        this.database = firebase.database();\n        this.sendMessage = this.sendMessage.bind(this);\n        this.onMessageChange = this.onMessageChange.bind(this);\n      }\n\n    render() {\n        return (\n              <div className=\"View\">\n                <div className=\"Messaging\">\n                <div className=\"add-player-form\">\n                  <form onSubmit={this.sendMessage}>\n                    <input type=\"text\" value={this.state.message} onChange={this.onMessageChange} />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" >\n                      Send Message\n                    </Button>\n                  </form>\n                </div>\n                  <Button variant=\"contained\" color=\"primary\" onClick={()=>this.sendMessage()}> \n                    Send\n                  </Button>\n                </div>\n                <div className=\"History\">\n                  <Scoreboard initialPlayers={this.state.players} messages={this.state.playerMessages}/>\n                </div>\n              </div>\n\n        );\n      }\n    \n    componentDidUpdate(prevProps) {\n      if (!prevProps || this.props.user.uid != prevProps.user.uid) {\n        console.log('props.user update');\n        this.updateUserName();\n        this.deleteOldMessages();\n        this.setupPlayerListeners();\n      }\n    }\n\n    updateUserName() {\n      this.database.ref('username/' + this.props.user.uid).set({'username': this.props.user.displayName});\n    }\n\n    // Remove posts that's older than 2 hours.\n    deleteOldMessages() {\n      let retrieveMessagesRef = this.database.ref('users/'+this.props.user.uid);\n      let oldestKey = \"\";\n      let now = Date.now();\n      let cutoff = now - 2*60*60*1000;\n      retrieveMessagesRef.orderByChild('timestamp').endAt(cutoff).limitToLast(1).on(\"child_added\", (snapshot) => {\n        snapshot.ref.remove();\n      })\n    }\n\n    sendMessage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n      // this.deleteOldMessages();\n      if (!this.state.message) {return;}\n      const message = this.state.message;\n      this.setState({ message: '' });\n        let postMessagesRef = this.database.ref('users/'+this.props.user.uid);\n       let newMessage = postMessagesRef.push();\n       newMessage.set({message, timestamp: Date.now()});\n    }\n\n    setupPlayerListeners() {\n      let usernameRef = this.database.ref('username');\n      usernameRef.on('child_added', (snapshot) => {\n        this.state.users[snapshot.key] = snapshot.val().username;\n        // console.log(this.state.users);\n        const sortedUsers = Object.keys(this.state.users).sort().map((key, i) => {\n            return {name:this.state.users[key], id: i, score: 0, uid: key};\n          });\n        this.setState({players: sortedUsers});\n        //console.log(sortedUsers);\n        this.setupChatHistoryListeners(sortedUsers);\n      })\n    }\n\n    setupChatHistoryListeners(sortedUsers) {\n      for (let player of sortedUsers) {\n        // console.log(player);\n        let retrieveMessagesRef = this.database.ref('users/'+player.uid);\n        retrieveMessagesRef.orderByChild('timestamp').limitToLast(3).on(\"child_added\", (snapshot) => {\n          console.log(snapshot.val().message);\n          let history = this.state.playerMessages[player.uid];\n          if (!history) {\n            history = this.state.playerMessages[player.uid] = {};\n          }\n          if (!history.lastTimestamp || history.lastTimestamp !== snapshot.val().timestamp) {\n            history.lastTimestamp = snapshot.val().timestamp;\n            if (!history.messages) {\n              history.messages = [];\n            }\n            history.messages.unshift(snapshot.val().message);\n            if (history.messages.length > 3) {history.messages.pop();}\n            console.log(this.state.playerMessages);\n          }\n          \n        })\n      }\n    }\n  \n    onMessageChange(e) {\n      this.setState({ message: e.target.value });      \n    }\n}\n\nexport default View;","import logo from './logo.svg';\nimport './App.css';\nimport View from './View.js';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Button from '@material-ui/core/Button';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super();\n    console.log('foo');\n              // Your web app's Firebase configuration\n              var firebaseConfig = {\n                apiKey: \"AIzaSyB4X2zC7tYE6T5e0rIBlZ8RzbNhnAQ58Ws\",\n                authDomain: \"multiplayer-trivia-68951.firebaseapp.com\",\n                projectId: \"multiplayer-trivia-68951\",\n                storageBucket: \"multiplayer-trivia-68951.appspot.com\",\n                messagingSenderId: \"1016103210575\",\n                appId: \"1:1016103210575:web:c997edfe327ca68893e43a\",\n                measurementId: \"G-7JBQP4CF0Y\"\n              };\n              if (!firebase.apps.length){\n              // Initialize Firebase\n              firebase.initializeApp(firebaseConfig);\n              }\n              \n      \n      \n    this.state = {signed : false, user: {}};\n    this.authProvider = new firebase.auth.GoogleAuthProvider();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"Sign-in-button-div\">\n            <Button variant=\"contained\" color=\"primary\" disabled={this.state.signed} onClick={()=>this.signIn()}> \n              Sign in to Google \n            </Button>\n          </div>\n          <img src={this.state.user.photoURL} className=\"Google-photo\" hidden={!this.state.signed}></img>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div hidden={!this.state.signed}>\n          <View hidden={!this.state.signed} user={this.state.user}></View>\n        </div>\n      </div>\n    );\n  }\n\n  signIn() {\n    firebase.auth()\n      .signInWithPopup(this.authProvider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        // ...\n        this.setState({signed:true, user: result.user});\n        console.log(user.displayName);\n      }).catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}