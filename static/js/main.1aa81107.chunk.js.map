{"version":3,"sources":["logo.svg","Player.js","Scoreboard.js","View.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","className","hidden","isHost","onClick","onChange","score","Player","colors","sizes","this","isLeader","src","photoURL","name","Chat","messages","map","message","index","Chip","label","size","color","onScoreChange","Component","nextID","Stopwatch","componentDidMount","interval","setInterval","onTick","componentWillUnmount","clearInterval","state","running","elapsedTime","previousTime","onStart","bind","onStop","onReset","now","Date","setState","seconds","Math","floor","startStop","Stats","totalPlayers","players","length","totalPoints","reduce","total","player","Header","title","Scoreboard","initialPlayers","onPlayerAdd","onRemovePlayer","prevProps","delta","database","ref","uid","update","console","log","push","id","splice","leaderIndices","getLeaderIndices","onRemove","photoUrl","indexOf","maxScore","forEach","indices","View","firebase","prevMessages","users","playerMessages","sendMessage","onMessageChange","Paper","elevation","Button","variant","quickAnswer","onSubmit","placeholder","type","value","removeAllUsers","user","updateUserName","deleteOldMessages","setupPlayerListeners","displayName","on","snapshot","remove","retrieveMessagesRef","cutoff","orderByChild","endAt","limitToLast","text","e","preventDefault","set","timestamp","usernameRef","key","username","val","sortedUsers","Object","keys","sort","i","setupChatHistoryListeners","history","lastTimestamp","unshift","pop","target","App","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","signed","authProvider","auth","GoogleAuthProvider","logo","alt","disabled","signIn","signInWithPopup","then","result","credential","accessToken","catch","error","code","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aa81107.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\nimport './Player.css';\nimport Chip from '@material-ui/core/Chip';\nimport {Chat} from '@material-ui/icons';\n\n// Stateless Functional Components\nfunction Counter(props) {\n    return (\n      <div className=\"counter\">\n          <div hidden={!props.isHost}> \n            <button className=\"counter-action decrement\" onClick={function () { props.onChange(-1); }}> - </button>\n        </div>\n        <div className=\"counter-score\"> {props.score} </div>\n        <div hidden={!props.isHost}> \n            <button className=\"counter-action increment\" hidden={!props.isHost} onClick={function () { props.onChange(+1); }}> + </button>\n            </div>\n      </div>\n    );\n  }\n  \n  // Counter.propTypes = {\n  //   score: PropTypes.number.isRequired,\n  //   onChange: PropTypes.func.isRequired\n  //   //  initialScore: PropTypes.number.isRequired    // setting the initial player score stated in the PLAYERS array\n  \n  // };\n\nclass Player extends Component {\n    render() {\n        let colors = ['primary', 'default', 'default'];\n        let sizes = ['medium', 'small', 'small'];\n        return (\n        <div className=\"player\">\n            <div className=\"player-container\">\n                <div hidden={!this.props.isLeader} className=\"leader-icon\">👑</div>\n                <div className=\"player-name\">\n                {/* <a className=\"remove-player\" onClick={this.props.onRemove}> X </a> */}\n                <img src={this.props.photoURL} className=\"player-photo\" ></img>\n                {this.props.name}\n                <Chat className=\"chat-icon\" />\n                </div>\n                <div className=\"message-chips\">\n                    {this.props.messages ?  \n                        this.props.messages.messages.map((message, index) => {\n                            return (<Chip label={message} size={sizes[index]} \n                                color={colors[index]} className={\"chip-\" + index}></Chip> )\n                        }) : ''\n                    }\n                </div>\n                {/* {this.props.messages && this.props.messages.lastTimestamp} */}\n            </div>\n            <div className=\"player-score\">\n            <Counter score={this.props.score} onChange={this.props.onScoreChange} isHost={this.props.isHost}/>\n            </div>\n        </div>\n    \n        );\n    }\n  \n  // Player.propTypes = {\n  //   name: PropTypes.string.isRequired,\n  //   score: PropTypes.number.isRequired,\n  //   onScoreChange: PropTypes.func.isRequired,\n  //   onRemove: PropTypes.func.isRequired\n  // };\n}\n\nexport default Player;","import { Component, PropTypes } from 'react';\nimport './Scoreboard.css';\nimport Player from './Player.js';\n\n\nlet nextID = 4;\n\n// Components\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      running: false,\n      elapsedTime: 0,\n      previousTime: 0\n       };\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onTick = this.onTick.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.interval = setInterval(this.onTick,100);\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval);\n  }\n\n  onTick() {\n    if(this.state.running) {\n      let now = Date.now();  \n      this.setState({\n        previousTime: now,\n        elapsedTime: this.state.elapsedTime + (now - this.state.previousTime)\n      });\n    }\n    // console.log('onTick');\n  }\n\n  onStart() {\n    this.state = {\n      running: true, \n      previousTime: Date.now()\n      };\n    this.setState(this.state);\n  };\n\n  onStop() {\n    this.state = {running: false};\n    this.setState(this.state);\n  };\n\n  onReset() {\n    this.state = ({\n      elapsedTime: 0,\n      previousTime: Date.now()\n    });\n    this.setState(this.state);\n  };\n\n  render() {\n    let seconds = Math.floor(this.state.elapsedTime / 1000);\n    // ternary conditional operator can also be used inside a JSX expression (if statements cannot)\n   let startStop = this.state.running ? <button onClick={this.onStop}>Stop</button> : \n                    <button onClick={this.onStart}>Start</button>;\n \n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <div className=\"stopwatch-time\"> {seconds} </div>\n        { startStop }\n        <button onClick={this.onReset}>Reset</button>\n      </div>\n    );\n  };\n}\n\nclass AddPlayerForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      name: \"\"\n    };\n    this.onNameChange = this.onNameChange.bind(this);\n\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.onAdd(this.state.name);\n    this.setState({ name: \"\" });\n  }\n\n  onNameChange(e) {\n    this.setState({ name: e.target.value });\n  }\n\n\n  render() {\n    return (\n      <div className=\"add-player-form\">\n        <form onSubmit={this.onSubmit}>\n          <input type=\"text\" value={this.state.name} onChange={this.onNameChange} />\n          <input type=\"submit\" value=\"Add Player\" />\n        </form>\n      </div>\n    );\n  }\n};\n\n// AddPlayerForm.propTypes = {\n//   onAdd: PropTypes.func.isRequired\n// }\n\nfunction Stats(props) {\n  let totalPlayers = props.players.length;\n  let totalPoints = props.players.reduce(function (total, player) {\n    return total + player.score;\n  }, 0);\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <td>Players:</td>\n          <td>{totalPlayers}</td>\n        </tr>\n        <tr>\n          <td>Total Points:</td>\n          <td>{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\n// Stats.propTypes = {\n//   players: PropTypes.array.isRequired\n//};\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <Stats players={props.players} />\n      <h1>{props.title}</h1>\n      <Stopwatch />\n    </div>\n  );\n}\n\n// Header.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   players: PropTypes.array.isRequired\n// };\n\n// ES6 Classes\n// class Counter extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {score: this.props.initialScore};  // Move the score from props to the state proprty\n//     this.incrementScore = this.incrementScore.bind(this);\n//     this.decrementScore = this.decrementScore.bind(this);\n//   }\n//   incrementScore() {\n//     this.setState({\n//       score: (this.state.score + 1)\n//     });\n//   }\n\n//   decrementScore() {\n//     if (this.state.score !== 0) {   // if statement so the score does not go below 0\n//     this.setState({\n//       score: (this.state.score - 1)\n//     });\n//     }\n//   }\n\n\n//   render() {\n//     return (\n//       <div className=\"counter\">\n//         <button className=\"counter-action decrement\" onClick={this.decrementScore}> - </button>\n//         <div className=\"counter-score\"> {this.state.score} </div>\n//         <button className=\"counter-action increment\" onClick={this.incrementScore}> + </button>\n//       </div>\n//     );\n//   }\n// };\n\n\n\n// end of components\n\n// Main Application Component\n// ES6 Classes\nclass Scoreboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { players: this.props.initialPlayers , messages: {}};\n    this.onPlayerAdd = this.onPlayerAdd.bind(this);\n    this.onRemovePlayer = this.onRemovePlayer.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    //  if (!prevProps || this.props.initialPlayers.length != prevProps.initialPlayers.length) {\n    //     this.setState({ players: this.props.initialPlayers });\n    //  }\n\n    //  if (!prevProps || this.props.messages !== prevProps.messages) {\n    //     this.setState({messages: this.props.messages});\n    //     console.log('update messages');\n    // }\n  }\n\n  onScoreChange(index, delta) {\n    this.props.initialPlayers[index].score += delta;\n    this.setState(this.state);\n    // Update firebase db.\n    this.props.database.ref('username/' + this.props.initialPlayers[index].uid).update({'score': this.props.initialPlayers[index].score});\n  }\n\n  onPlayerAdd(name) {\n    console.log('Player added', name);\n    this.props.initialPlayers.push({\n      name: name,\n      score: 0,\n      id: nextID\n    });\n    this.setState(this.state);  // updating the state\n    nextID = nextID + 1;\n  }\n\n  onRemovePlayer(index) {\n    this.props.initialPlayers.splice(index, 1);\n    this.setState(this.state);  // update the state\n  }\n\n  render() {\n      let leaderIndices = this.getLeaderIndices();\n    return (\n      <div className=\"scoreboard\">\n        <Header title={this.props.title} players={this.props.initialPlayers} />\n\n        <div className=\"players\">\n          {this.props.initialPlayers.map(function (player, index) {\n            return (\n              <Player\n                onScoreChange={function (delta) { this.onScoreChange(index, delta) }.bind(this)}\n                onRemove={function () { this.onRemovePlayer(index) }.bind(this)}\n                name={player.name}\n                score={player.score}\n                messages={this.props.messages[player.uid]}\n                key={player.id}\n                isHost={this.props.isHost}\n                photoURL={player.photoUrl}\n                isLeader={leaderIndices.indexOf(index) > -1} />\n            );\n          }.bind(this))}\n        </div>\n        {/* <div hidden={!this.props.isHost}> \n            <AddPlayerForm onAdd={this.onPlayerAdd} />\n        </div> */}\n\n      </div>\n\n    );\n  }\n\n  getLeaderIndices() {\n      let maxScore = 0;\n      this.props.initialPlayers.forEach((player) => {\n        if (player.score > maxScore) {maxScore = player.score;}\n      });\n      let indices = [];\n      if (maxScore == 0) {return [];}\n      this.props.initialPlayers.forEach((player, index)=> {\n        if (player.score == maxScore) {\n            indices.push(index);\n        }  \n      });\n      return indices;\n  }\n}\n\n// function Application(props) {\n//   return (\n//     <div className=\"scoreboard\">\n//       <Header title={props.title} />\n\n//       <div className=\"players\">\n//         {props.players.map(function (player) {\n//           return <Player name={player.name} score={player.score} key={player.id} />\n//         })}\n//       </div>\n//     </div>\n\n//   );\n// }\n\n// Application.propTypes = {\n//   title: React.PropTypes.string,\n//   initialPlayers: React.PropTypes.arrayOf(React.PropTypes.shape({\n//     name: React.PropTypes.string.isRequired,\n//     score: React.PropTypes.number.isRequired,\n//     id: React.PropTypes.number.isRequired\n//   })).isRequired  // accepts only an array of objects which hasd the specifc valuies listed in the shape()\n// };\n\n// Application.defaultProps = {  // This is the defualt value you can set if there is no specifc title value\n//   title: \"Scoreboard\"\n// };\n\n// ReactDOM.render(<Application initialPlayers={PLAYERS} />, document.getElementById('container'));\n\nexport default Scoreboard;","import { Component } from 'react';\nimport './View.css';\nimport Button from '@material-ui/core/Button';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport Scoreboard from './Scoreboard.js';\nimport { Paper } from '@material-ui/core';\n\nexport let NUM_MESSAGES_HISTORY = 10;\n\nclass View extends Component {   \n    constructor(props) {\n        super(props);\n        this.database = firebase.database();\n        this.state = {prevMessages : [], users: {}, players: [], message : '', playerMessages: {}, database: this.database};\n        this.sendMessage = this.sendMessage.bind(this);\n        this.onMessageChange = this.onMessageChange.bind(this);\n      }\n\n    render() {\n        return (\n              <div className=\"View\">\n                <Paper className=\"messaging-paper\" elevation={3}>\n                <div className=\"Messaging\">\n                  <div className=\"first-row\">\n                    <Button variant=\"outlined\" color=\"default\" onClick={()=>this.quickAnswer(\"🤯\")}> \n                    🤯\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"🦀\")}> \n                    🦀\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"💖\")}> \n                    💖\n                    </Button>\n                  </div>\n                  <div className=\"second-row\">\n\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"🎉\")}> \n                    🎉\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={()=>this.quickAnswer(\"👍\")}> \n                    👍\n                    </Button>\n                  </div>\n                  <div className=\"custom-text-form\">\n                  <form onSubmit={this.sendMessage}>\n                    <input placeholder=\"Type your answer\" type=\"text\" value={this.state.message} onChange={this.onMessageChange} />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" >\n                      Enter\n                    </Button>\n                  </form>\n                </div>\n                </div>\n                </Paper>\n                <div className=\"History\">\n                  <Scoreboard initialPlayers={this.state.players} messages={this.state.playerMessages} database={this.state.database} isHost={this.props.isHost}/>\n                    <div hidden={!this.props.isHost}>\n                    <Button variant=\"contained\" color=\"secondary\"  onClick={()=>this.removeAllUsers()}>\n                      Remove all users (refresh page after)\n                    </Button>\n                    </div>\n                </div>\n              </div>\n\n        );\n      }\n    \n    componentDidUpdate(prevProps) {\n      if (!prevProps || this.props.user.uid != prevProps.user.uid) {\n        console.log('props.user update');\n        this.updateUserName();\n        this.deleteOldMessages();\n        this.setupPlayerListeners();\n      }\n    }\n\n    updateUserName() {\n      this.database.ref('username/' + this.props.user.uid).update({'username': this.props.user.displayName, 'photoUrl': this.props.user.photoURL });\n    }\n\n    removeAllUsers() {\n      let usernameRef = this.database.ref('username');\n      usernameRef.on('child_added', (snapshot) => {\n        snapshot.ref.remove();\n      });\n    }\n\n    // Remove posts that's older than 2 hours.\n    deleteOldMessages() {\n      let retrieveMessagesRef = this.database.ref('users/'+this.props.user.uid);\n      let oldestKey = \"\";\n      let now = Date.now();\n      let cutoff = now - 2*60*60*1000;\n      retrieveMessagesRef.orderByChild('timestamp').endAt(cutoff).limitToLast(1).on(\"child_added\", (snapshot) => {\n        snapshot.ref.remove();\n      })\n    }\n\n    quickAnswer(text) {\n      this.state.message = text;\n      this.sendMessage();\n    }\n\n    sendMessage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n      // this.deleteOldMessages();\n      if (!this.state.message) {return;}\n      const message = this.state.message;\n      this.setState({ message: '' });\n        let postMessagesRef = this.database.ref('users/'+this.props.user.uid);\n       let newMessage = postMessagesRef.push();\n       newMessage.set({message, timestamp: Date.now()});\n    }\n\n    setupPlayerListeners() {\n      let usernameRef = this.database.ref('username');\n      usernameRef.on('child_added', (snapshot) => {\n        this.state.users[snapshot.key] = {username: snapshot.val().username, score: snapshot.val().score || 0, photoUrl: snapshot.val().photoUrl};\n        const sortedUsers = Object.keys(this.state.users).sort().map((key, i) => {\n            return {name:this.state.users[key].username, id: i, score: this.state.users[key].score, uid: key,\n              photoUrl: this.state.users[key].photoUrl};\n          });\n        this.setState({players: sortedUsers});\n        //console.log(sortedUsers);\n        this.setupChatHistoryListeners(sortedUsers);\n      });\n      usernameRef.on('child_changed', (snapshot) => {\n        this.state.users[snapshot.key] = {username: snapshot.val().username, score: snapshot.val().score || 0, photoUrl: snapshot.val().photoUrl};\n        const sortedUsers = Object.keys(this.state.users).sort().map((key, i) => {\n            return {name:this.state.users[key].username, id: i, score: this.state.users[key].score, uid: key,\n              photoUrl: this.state.users[key].photoUrl};\n          });\n        this.setState({players: sortedUsers});\n        // console.log(sortedUsers);\n        // this.setupChatHistoryListeners(sortedUsers);\n      })\n    }\n\n    setupChatHistoryListeners(sortedUsers) {\n      for (let player of sortedUsers) {\n        // console.log(player);\n        let retrieveMessagesRef = this.database.ref('users/'+player.uid);\n        retrieveMessagesRef.orderByChild('timestamp').limitToLast(3).on(\"child_added\", (snapshot) => {\n          console.log(snapshot.val().message);\n          let history = this.state.playerMessages[player.uid];\n          if (!history) {\n            history = this.state.playerMessages[player.uid] = {};\n          }\n          if (!history.lastTimestamp || history.lastTimestamp !== snapshot.val().timestamp) {\n            history.lastTimestamp = snapshot.val().timestamp;\n            if (!history.messages) {\n              history.messages = [];\n            }\n            history.messages.unshift(snapshot.val().message);\n            if (history.messages.length > 3) {history.messages.pop();}\n            // console.log(this.state.playerMessages);\n            this.setState({playerMessages: this.state.playerMessages});\n          }\n          \n        })\n      }\n    }\n  \n    onMessageChange(e) {\n      this.setState({ message: e.target.value });      \n    }\n}\n\nexport default View;","import logo from './logo.svg';\nimport './App.css';\nimport View from './View.js';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Button from '@material-ui/core/Button';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('foo');\n              // Your web app's Firebase configuration\n              var firebaseConfig = {\n                apiKey: \"AIzaSyB4X2zC7tYE6T5e0rIBlZ8RzbNhnAQ58Ws\",\n                authDomain: \"multiplayer-trivia-68951.firebaseapp.com\",\n                projectId: \"multiplayer-trivia-68951\",\n                storageBucket: \"multiplayer-trivia-68951.appspot.com\",\n                messagingSenderId: \"1016103210575\",\n                appId: \"1:1016103210575:web:c997edfe327ca68893e43a\",\n                measurementId: \"G-7JBQP4CF0Y\"\n              };\n              if (!firebase.apps.length){\n              // Initialize Firebase\n              firebase.initializeApp(firebaseConfig);\n              }\n              \n      \n      \n    this.state = {signed : false, user: {}, isHost: false};\n    this.authProvider = new firebase.auth.GoogleAuthProvider();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> ML Insights Trivia </h1>\n          <img src={this.state.user.photoURL} className=\"Google-photo\" hidden={!this.state.signed}></img>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div hidden={!this.state.signed}>\n          <View hidden={!this.state.signed} user={this.state.user} isHost={this.state.isHost}></View>\n        </div>\n        <div className=\"Sign-in-button-div\">\n          <Button variant=\"contained\" color=\"primary\" disabled={this.state.signed} onClick={()=>this.signIn()}> \n            Sign in to Google \n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  signIn() {\n    firebase.auth()\n      .signInWithPopup(this.authProvider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        // ...\n        this.setState({signed:true, user: result.user, isHost: result.user.uid == \"93ev6xk0QzPQJG7daXFOD7YlzZi1\" || \n        result.user.uid == \"CSGH2cs8wWY0dfIzO961RziMdgM2\"});\n        console.log(user.displayName);\n      }).catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}